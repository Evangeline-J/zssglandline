// index.js

const fs = require('fs');
const VPTreeFactory = require('../draw/js/third_party/vptree.js');

// 1. 准备 polylines 数据（每一项是一条单行数组）
const polylines = [
  [-176,-178,-161,-179,-152,-180,-144,-180,-138,-179,-125,-181,-110,-183,-102,-183,-84,-183,-70,-183,-57,-183,-50,-183,-29,-176,-10,-169,-3,-168,7,-163,18,-160,26,-156,34,-151,45,-143,52,-136,60,-128,69,-121,71,-117,76,-112,85,-102,89,-95,99,-80,106,-61,111,-55,114,-51,119,-44,119,-39,121,-32,120,-23,123,-9,124,8,124,20,124,34,124,41,124,47,126,51,128,63,132,72,134,80,137,87,139,95,141,101,144,111,146,121,148,127,151,136,154,144,158,154,161,160,165,163,169,168,172,174,175,174,176,178],
  [-141,-207,-140,-199,-137,-195,-134,-189,-131,-183,-127,-179,-122,-173,-117,-167,-112,-163,-103,-157,-98,-152,-89,-145,-82,-140,-75,-136,-64,-131,-59,-128,-52,-123,-44,-119,-29,-112,-19,-105,-11,-99,-4,-93,3,-87,9,-80,15,-73,18,-69,25,-62,31,-55,35,-48,39,-42,45,-34,50,-26,54,-16,56,-10,59,-4,63,3,69,14,74,19,79,27,82,33,82,38,82,47,84,52,88,58,101,80,103,85,105,88,107,92,119,106,122,119,125,129,125,136,124,140,123,144,124,148,124,153,133,186,134,197,139,203,141,207],
  [-133,-212,-131,-212,-128,-211,-122,-206,-118,-199,-111,-190,-103,-180,-90,-165,-84,-157,-80,-151,-74,-141,-67,-129,-57,-114,-47,-99,-43,-92,-40,-86,-35,-78,-30,-69,-26,-62,-18,-51,-11,-42,-5,-33,-1,-24,3,-15,6,-8,8,-3,11,3,14,10,18,19,21,27,23,35,26,45,29,55,32,60,36,66,37,70,41,74,46,80,52,88,56,94,60,100,63,102,69,112,72,116,79,126,83,131,86,135,92,143,94,147,100,155,105,164,107,169,111,175,115,182,119,185,123,192,125,197,127,201,130,210,133,212],
  [-81,-236,-59,-236,-38,-228,-32,-225,-24,-218,-13,-207,-3,-196,3,-188,9,-177,14,-162,18,-146,19,-133,21,-122,21,-110,21,-95,21,-87,19,-75,16,-59,12,-48,7,-36,2,-24,-5,-12,-10,-2,-13,7,-15,13,-20,25,-23,34,-25,38,-28,45,-30,52,-33,59,-34,66,-40,80,-44,89,-44,93,-44,101,-45,111,-46,125,-46,133,-46,142,-46,152,-44,162,-41,171,-36,178,-32,180,-25,187,-19,192,-13,196,-8,200,4,211,11,216,16,218,25,224,34,227,40,228,52,232,60,233,66,235,76,235,81,236],
  [-249,-25,-243,-37,-238,-46,-236,-50,-233,-58,-231,-65,-229,-70,-225,-74,-217,-83,-210,-89,-202,-95,-192,-100,-181,-105,-176,-108,-165,-110,-154,-113,-145,-113,-131,-114,-117,-115,-101,-115,-91,-116,-72,-116,-64,-116,-51,-116,-43,-115,-28,-113,-23,-111,-14,-108,-7,-107,7,-104,21,-101,26,-100,41,-99,54,-95,71,-95,78,-94,98,-93,109,-93,124,-91,142,-90,151,-88,162,-86,166,-83,176,-77,181,-72,188,-65,193,-61,198,-53,203,-47,207,-41,213,-35,221,-25,227,-18,232,-11,237,-4,239,3,242,9,244,15,247,24,249,25],
  [-189,164,-187,160,-186,152,-186,145,-185,137,-185,129,-182,120,-180,110,-179,101,-175,87,-170,75,-165,62,-161,51,-159,41,-156,31,-153,24,-149,17,-145,7,-140,2,-134,-7,-128,-12,-120,-19,-114,-24,-107,-31,-99,-35,-92,-41,-85,-47,-74,-52,-66,-57,-58,-62,-50,-66,-40,-70,-32,-75,-23,-79,-13,-83,-7,-86,1,-89,10,-93,17,-96,24,-98,36,-102,44,-105,50,-108,56,-109,62,-113,71,-117,85,-121,97,-128,105,-133,112,-137,123,-142,128,-145,135,-148,141,-150,150,-152,154,-155,161,-158,169,-160,182,-161,189,-164],
  [-249,-25,-243,-27,-231,-31,-218,-34,-211,-37,-205,-40,-197,-43,-191,-45,-183,-48,-174,-50,-167,-53,-160,-56,-156,-58,-146,-60,-140,-62,-130,-65,-123,-66,-110,-67,-100,-69,-89,-70,-77,-72,-64,-74,-55,-76,-41,-79,-21,-80,-14,-82,-6,-85,3,-88,14,-90,23,-92,32,-93,46,-95,52,-96,62,-98,73,-101,83,-104,94,-106,100,-107,113,-107,120,-107,129,-105,136,-98,144,-91,148,-85,154,-80,160,-74,167,-68,176,-60,182,-54,189,-47,200,-36,210,-25,217,-18,223,-13,230,-3,237,5,241,11,246,17,248,20,249,25],
  [-200,150,-187,151,-152,156,-136,157,-122,157,-103,157,-87,156,-74,156,-58,156,-42,152,-31,152,-19,152,-12,150,3,145,14,144,35,138,46,135,57,132,69,129,78,127,88,124,100,120,104,121,112,117,120,114,130,110,134,105,142,101,150,96,157,92,162,88,167,85,171,81,177,75,180,71,187,63,191,56,195,48,200,40,204,32,207,23,207,16,206,9,201,1,201,-6,201,-10,200,-15,198,-24,198,-32,198,-42,198,-50,198,-63,198,-71,198,-80,198,-92,198,-105,200,-117,200,-133,200,-143,200,-150],
  [-229,99,-227,99,-219,99,-210,101,-200,101,-187,101,-180,99,-172,99,-166,97,-159,95,-153,92,-149,90,-145,88,-139,84,-132,81,-129,81,-122,73,-117,68,-113,64,-107,60,-100,57,-86,55,-73,54,-61,53,-49,51,-35,50,-28,48,-23,47,-21,43,-20,40,-18,36,-17,32,-20,29,-21,26,-20,21,-16,16,-3,6,3,2,15,0,33,-3,43,-6,52,-8,65,-11,76,-14,81,-17,96,-22,113,-35,119,-38,132,-43,144,-47,153,-51,157,-54,163,-58,171,-63,182,-70,192,-75,199,-78,212,-81,217,-85,229,-99],
  [-141,-206,-140,-205,-138,-195,-136,-188,-136,-179,-136,-172,-138,-167,-141,-160,-141,-157,-143,-150,-145,-139,-144,-121,-140,-111,-137,-107,-131,-102,-126,-98,-121,-98,-118,-97,-117,-97,-115,-95,-113,-90,-106,-75,-99,-59,-95,-52,-93,-48,-89,-44,-88,-43,-84,-43,-79,-43,-70,-41,-61,-33,-45,-24,-40,-23,-22,-19,-9,-16,-5,-13,0,-8,2,-7,14,3,26,13,37,21,46,29,56,41,67,53,80,66,90,77,98,86,105,98,108,104,112,114,113,122,117,132,120,142,125,154,127,160,130,171,134,179,137,192,140,198,141,206]

]
// 2. 基于余弦相似度的距离函数
function cosDistance(vector1, vector2) {
    // 检查向量长度一致且为偶数（每个点包含x,y坐标）
    if (vector1.length !== vector2.length || vector1.length % 2 !== 0) {
        throw new Error('向量格式不正确：必须为偶数长度且长度一致');
    }

    let a = 0, b = 0;
    const length = vector1.length;
    
    // 计算点积和叉积的累积量
    for (let i = 0; i < length; i += 2) {
        const x1 = vector1[i];
        const y1 = vector1[i + 1];
        const x2 = vector2[i];
        const y2 = vector2[i + 1];
        
        a += x1 * x2 + y1 * y2;  // 点积
        b += x1 * y2 - y1 * x2;  // 叉积的z分量
    }

    // 处理除以零的情况
    if (a === 0) {
        return Math.PI / 2;  // 90度夹角
    }

    // 计算整体旋转角度
    const angle = Math.atan(b / a);
    
    // 计算余弦相似度距离
    const magnitude = Math.sqrt(a*a + b*b);
    const cosine = a / magnitude;
    return Math.acos(cosine);  // 返回弧度值（0~π）
}

// 3. 构建 VP-Tree（使用新距离函数）
const vpTree = VPTreeFactory.build(polylines, cosDistance, 10);

// 4. 序列化并写入文件（其余代码保持不变）
const vpTreeStr = vpTree.stringify();
const polylineLines = polylines
  .map(arr => '    ' + JSON.stringify(arr))
  .join(',\n');

const finalJson =
`{
  "polylines": [
${polylineLines}
  ],
  "vpTree": ${JSON.stringify(vpTreeStr)}
}`;

fs.writeFileSync('polylines_and_vptree.json', finalJson, 'utf8');
console.log('已生成 polylines_and_vptree.json');